% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sub_frame.R
\name{sub_frame}
\alias{sub_frame}
\title{A sub-framing function}
\usage{
sub_frame(df = NULL, num_subs = NULL)
}
\arguments{
\item{df}{data frame with any number of columns or rows to be subsetted to
equivalently sized sub-frames.}

\item{num_subs}{single, numeric value of the number of sub-frames desired.
Default is \code{NULL} in which case, if no value is entered, the frame
will be divided into 10 sub-frames.}
}
\value{
array with dimensions as sub-frame rows, sub-frame columns, and
 and sub-frame index.
}
\description{
The \code{"sub_frame"} function is a subsetting function intended to
  produce equivalently size subsets from a single data frame. This is done
  by evaluating the number of observations in the original data set and
  calculating how many rows should be in each subset for a given nubmer of
  subsets.
The purpose behind \code{"sub_frame"} is to break apart large data frames into
  smaller ones for the sake of efficiency. This could be useful for test
  sets for code or method testing, etc.
}
\examples{
# Create data frame
rand_frame <- data.frame(runif(100, 0, 1)
  , sample(c("M", "F", "Z"), 100, replace = TRUE)
  , rnorm(100, 0, 1))
colnames(rand_frame) <- c("runif", "sex_sample", "rnorm")

# Convert into sub-frame array (default "num_subs")
subbed_10 <- sub_frame(df = rand_frame)

# Convert into sub-frame array (5 "num_subs")
subbed_5 <- sub_frame(df = rand_frame, num_subs = 5)

for (i in 1:dim(subbed_10)[3]) {
  assign(paste0("rand_frame_", i), subbed_10[, , i])
}
}
